#!/usr/bin/env node

const AWS = require("aws-sdk")
const fs = require("fs")
const path = require("path")

if (process.argv.length < 3 || !process.argv[2]) {
  throw new Error("First arg needs to be source directory")
}

const sourceDir = path.resolve(process.cwd(), process.argv[2])

if (!fs.existsSync(sourceDir)) {
  throw new Error(`Source directory does not exist`)
}

console.log("Uploading artifacts from", sourceDir)

const s3 = new AWS.S3({
  accessKeyId: process.env.RELEASE_ACCESS_KEY_ID,
  secretAccessKey: process.env.RELEASE_SECRET_ACCESS_KEY,
  endpoint: process.env.RELEASE_ENDPOINT,
  maxRetries: 3
})

for (const buildPath of fs.readdirSync(sourceDir)) {
  const sourcePath = path.resolve(sourceDir, buildPath)
  const name = path.basename(sourcePath)

  console.log(`uploading ${sourcePath}=>${name}`)

  const stream = fs.createReadStream(sourcePath)
  s3.putObject({ Body: stream, ACL: "public-read", Key: name, Bucket: "flytest" })
    .promise()
    .then(resp => {
      console.log(`Uploaded ${name}`)
    })
    .catch(err => {
      console.error(`Error uploading ${name}`, err)
      process.exit(1)
    })
}

variables:
  System.Debug: true

jobs:
  # - job: build_info
  #   pool:
  #     vmImage: ubuntu-16.04
  #   steps:
  #     - script: echo "##vso[task.setvariable variable=version;isOutput=true] ./scripts/version"
  #       name: set_package_version

  # - job: lint
  #   pool:
  #     vmImage: ubuntu-16.04
  #   variables:
  #     CI: true
  #   timeoutInMinutes: 10
  #   steps:
  #     - task: NodeTool@0
  #       inputs:
  #         versionSpec: 10
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: "2.7"
  #         architecture: "x64"
  #     - script: |
  #         sudo apt-get update && sudo apt-get install -y nasm
  #         npm install -g yarn
  #         yarn install --no-progress && yarn bootstrap
  #         mkdir ./artifacts
  #       name: Install
  #     - script: yarn test:lint
  #       name: Lint
  #     - script: yarn test:format
  #       name: Format
  #     - task: PublishTestResults@2
  #       condition: always()
  #       inputs:
  #         testResultsFiles: "**/*junit.xml"
  #         searchFolder: $(Build.SourcesDirectory)/artifacts

  - job: macOS
    dependsOn: build_info
    pool:
      vmImage: xcode9-macos10.13
    strategy:
      maxParallel: 3
      matrix:
        # node-8:
        #   node_version: 8
        # node-10-3:
        #   node_version: 10.3
        node-latest:
          node_version: ">=10"
          node_check_latest: true
          build_cli_bundle: true
    variables:
      CI: true
    timeoutInMinutes: 15
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
          checkLatest: $(node_check_latest)
      - script: yarn install --no-progress && yarn bootstrap
        name: Install
      - script: yarn build && yarn bundle
        name: Build
      # - script: yarn test
      #   name: Test
      # - task: PublishTestResults@2
      #   condition: always()
      #   inputs:
      #     testResultsFiles: "**/*junit.xml"
      #     searchFolder: $(Build.SourcesDirectory)/artifacts
      # - script: ./scripts/release/pack darwin-x64
      #   condition: eq(variables['build_cli_bundle'], 'true')
      #   name: PackCLI
      # - script: ./scripts/release/upload-builds $(Build.SourcesDirectory)/artifacts
      #   name: Upload CLI Builds

  - job: macos_cli
    dependsOn: macos
    pool:
      vmImage: xcode9-macos10.13
    variables:
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 11.10.1
      - script: yarn install --no-progress && yarn bootstrap
        name: Install
      - script: yarn build && yarn bundle
        name: Build
      - script: mkdir -p $(Build.SourcesDirectory)/artifacts/dist
      - script: ./scripts/release/pack darwin-x64
        name: pack_cli
      - script: ./scripts/upload-builds $(Build.SourcesDirectory)/artifacts/dist
        name: upload_cli_builds
  # - job: Linux
  #   pool:
  #     vmImage: ubuntu-16.04
  #   strategy:
  #     maxParallel: 3
  #     matrix:
  #       node-8:
  #         node_version: 8
  #       node-10-3:
  #         node_version: 10.3
  #       node-latest:
  #         node_version: ">=10"
  #         node_check_latest: true
  #   variables:
  #     CI: true
  #   timeoutInMinutes: 15
  #   steps:
  #     - task: NodeTool@0
  #       inputs:
  #         versionSpec: $(node_version)
  #         checkLatest: $(node_check_latest)
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: "2.7"
  #         architecture: "x64"
  #     - script: |
  #         sudo apt-get update && sudo apt-get install -y nasm
  #         npm install -g yarn
  #         yarn install --no-progress && yarn bootstrap
  #       name: Install
  #     - script: yarn build && yarn bundle
  #       name: Build
  #     - script: yarn test
  #       name: Test
  #     - task: PublishTestResults@2
  #       condition: always()
  #       inputs:
  #         testResultsFiles: "**/*junit.xml"
  #         searchFolder: $(Build.SourcesDirectory)/artifacts
  # - job: Windows
  #   pool:
  #     vmImage: vs2017-win2016
  #   strategy:
  #     maxParallel: 3
  #     matrix:
  #       node-8:
  #         node_version: 8
  #       node-10-3:
  #         node_version: 10.3
  #       node-latest:
  #         node_version: ">=10"
  #         node_check_latest: true
  #   variables:
  #     CI: true
  #   timeoutInMinutes: 10
  #   steps:
  #     - task: NodeTool@0
  #       inputs:
  #         versionSpec: $(node_version)
  #         checkLatest: $(node_check_latest)
  #     # for node-gyp
  #     # - task: UsePythonVersion@0
  #     #   inputs:
  #     #     versionSpec: '2.7'
  #     #     architecture: 'x64'
  #     - script: npm install --global windows-build-tools
  #       displayName: "Install windows build tools"
  #     - script: npm install -g yarn
  #       displayName: "Install yarn"
  #     - script: yarn install --no-progress
  #       displayName: "yarn install"
  #     - script: yarn bootstrap --no-progress
  #       displayName: "yarn bootstrap"
  #     - script: yarn build && yarn bundle
  #       displayName: "yarn build && yarn bundle"
  #       name: Build
  #     - script: yarn test
  #       displayName: "yarn test"
  #       name: Test
  #     - task: PublishTestResults@2
  #       condition: always()
  #       inputs:
  #         testResultsFiles: "**/*junit.xml"
  #         searchFolder: $(Build.SourcesDirectory)/artifacts
